#include<iostream>
#include<string>
#include<cstring>
#include<iomanip>
#include<queue>
using namespace std;
//-1+-2
int main() {
	string input = ""; //enter the calculation string
	string str_num[2] = {}; //store two number of calculation
	queue<char>st = {}; //store the string after remove blank character
	char sign[3] = {}; //store sign of numbers and calculation sign

	getline(cin, input);

	//loai bo toan bo khoang trong
	for (int i = 0; i < input.size(); i++)
	{
		if (input[i] != ' ')
		{
			st.push(input[i]);
		}
	};

	int s_count = 0;//count serial for sign array
	int n_count = 0;//count serial for str_num array
	bool isRightInput = true; //if input string is include number and calculation sign only

	/*this issue has 3 cases:
1. the calculation has 3 signs, ex: -1+-2
2. the calculation has 2 sign before, ex: -1+2
3. the calculation has 2 digns after, ex: 1+-2*/
	if (st.front() == '-' || st.front() == '+' || st.front() == '*' || st.front() == '/') {
		sign[s_count] = st.front();
		s_count++;
		st.pop();
	}
	else
	{
		s_count++;
	}
	while (!st.empty())
	{
		if (st.front() == '-' || st.front() == '+' || st.front() == '*' || st.front() == '/') {
			sign[s_count] = st.front();
			s_count++;
			if (n_count == 0)
				n_count++;
			st.pop();
		}
		else {
			if (st.front() < '0' || st.front() > '9')
			{
				isRightInput = false;
				break;
			}
			else
			{
				str_num[n_count] += st.front();
				st.pop();
			}
		}
	}

	if (sign[0] != 0)
	{
		str_num[0] = sign[0] + str_num[0];
	};
	if (sign[2] != 0)
	{
		str_num[1] = sign[2] + str_num[1];
	}

	float a = atoi(str_num[0].c_str());
	float b = atoi(str_num[1].c_str());

	cout << fixed << setprecision(2);
	switch (sign[1])
	{
	case '-':
		cout << a - b;
		break;
	case '+':
		cout << a + b;
		break;
	case '*':
		cout << a * b;
		break;
	case '/':
		if (b == 0)
		{
			cout << "ERROR";
		}
		else cout << a / b;
		break;
	default:
		break;
	}
	return 0;
}
